{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Intro","text":"<p>\u041e\u0442\u0447\u0435\u0442\u044b \u043f\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044e \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0445 \u0440\u0430\u0431\u043e\u0442 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 Web-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\ud83d\udc80 2023 - 2024</p>"},{"location":"Lab1/","title":"Lab1","text":""},{"location":"Lab1/#_1","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0441\u043e\u043a\u0435\u0442\u0430\u043c\u0438","text":""},{"location":"Lab1/#1","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0421\u0435\u0440\u0432\u0435\u0440 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP.</p> <p>\u041a\u043e\u0434:</p> <pre><code># server.py\nimport socket\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c UDP-\u0441\u0435\u0440\u0432\u0435\u0440\nserver_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\nserver_address = ('localhost', 12345)\nserver_socket.bind(server_address)\n\nwhile True:\n    print(\"\u041e\u0436\u0438\u0434\u0430\u043d\u0438\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430...\")\n    data, client_address = server_socket.recvfrom(1024)\n    print(f\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430: {data.decode()}\")\n\n    response = \"Hello, client\"\n    server_socket.sendto(response.encode(), client_address)\n</code></pre> <ul> <li>\u0421\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f UDP-\u0441\u0435\u0440\u0432\u0435\u0440 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket.</li> <li>\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0430\u0434\u0440\u0435\u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (server_address), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0445\u043e\u0441\u0442 (localhost) \u0438 \u043f\u043e\u0440\u0442 12345.</li> <li>UDP-\u0441\u043e\u043a\u0435\u0442 \u043f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043a \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u0430\u0434\u0440\u0435\u0441\u0443 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e server_socket.bind(server_address).</li> <li>\u0417\u0430\u0442\u0435\u043c \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0439 \u0446\u0438\u043a\u043b (while True) \u0438 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u043f\u0440\u0438\u0445\u043e\u0434\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432.</li> <li>\u041a\u043e\u0433\u0434\u0430 \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430, \u043e\u043d\u043e \u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e server_socket.recvfrom(1024). \u0417\u0434\u0435\u0441\u044c 1024 - \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0434\u0430\u043d\u043d\u044b\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0437\u0430 \u043e\u0434\u0438\u043d \u0440\u0430\u0437.</li> <li>\u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f, \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0442\u0432\u0435\u0442\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 (\"Hello, client\") \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e server_socket.sendto(response.encode(), client_address).</li> </ul> <pre><code># client.py\nimport socket\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c UDP-\u043a\u043b\u0438\u0435\u043d\u0442\u0430\nclient_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\nserver_address = ('localhost', 12345)\n\nmessage = \"Hello, server\"\nclient_socket.sendto(message.encode(), server_address)\n\ndata, server_address = client_socket.recvfrom(1024)\nprint(f\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: {data.decode()}\")\n\nclient_socket.close()\n</code></pre> <ul> <li>\u0421\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f UDP-\u043a\u043b\u0438\u0435\u043d\u0442 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket.</li> <li>\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0430\u0434\u0440\u0435\u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (server_address), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0445\u043e\u0441\u0442 (localhost) \u0438 \u043f\u043e\u0440\u0442 12345.</li> <li>\u041a\u043b\u0438\u0435\u043d\u0442 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 (message), \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \"Hello, server\", \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0435\u0433\u043e \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e client_socket.sendto(message.encode(), server_address).</li> <li>\u0417\u0430\u0442\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e client_socket.recvfrom(1024).</li> <li>\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 (\"Hello, client\") \u0434\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043d\u0430 \u044d\u043a\u0440\u0430\u043d.</li> <li>\u041d\u0430\u043a\u043e\u043d\u0435\u0446, \u043a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u043a\u0435\u0442 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e client_socket.close().</li> </ul> <p></p>"},{"location":"Lab1/#2","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0443 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u0412\u0430\u0440\u0438\u0430\u043d\u0442\u044b:</p> <p>a. \u0422\u0435\u043e\u0440\u0435\u043c\u0430 \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430 b. \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f. c. \u041f\u043e\u0438\u0441\u043a \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u0442\u0440\u0430\u043f\u0435\u0446\u0438\u0438. d. \u041f\u043e\u0438\u0441\u043a \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430.</p> <p>\u0412\u0430\u0440\u0438\u0430\u043d\u0442 \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442\u0441\u044f \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u043f\u043e\u0440\u044f\u0434\u043a\u043e\u0432\u044b\u043c \u043d\u043e\u043c\u0435\u0440\u043e\u043c \u0432 \u0436\u0443\u0440\u043d\u0430\u043b\u0435. \u041f\u044f\u0442\u044b\u0439 \u0441\u0442\u0443\u0434\u0435\u043d\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 1 \u0438 \u0442.\u0434. \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP</p> <p>\u041a\u043e\u0434:</p> <pre><code># server.py\nimport socket\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c TCP-\u0441\u0435\u0440\u0432\u0435\u0440\nserver_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nserver_address = ('localhost', 12345)\nserver_socket.bind(server_address)\n\nserver_socket.listen(1)\nprint(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d. \u041e\u0436\u0438\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430...\")\n\nwhile True:\n    client_connection, client_address = server_socket.accept()\n    print(f\"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 {client_address}\")\n\n    # \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\n    data = client_connection.recv(1024).decode()\n    print(f\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430: {data}\")\n\n    # \u0420\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e (\u0442\u0435\u043e\u0440\u0435\u043c\u0430 \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430)\n    try:\n        a, b = map(float, data.split(','))\n        c = (a ** 2 + b ** 2) ** 0.5\n        response = f\"\u0413\u0438\u043f\u043e\u0442\u0435\u043d\u0443\u0437\u0430 (c) \u0440\u0430\u0432\u043d\u0430 {c}\"\n    except ValueError:\n        response = \"\u041e\u0448\u0438\u0431\u043a\u0430: \u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\"\n\n    # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443\n    client_connection.send(response.encode())\n    client_connection.close()\n</code></pre> <ul> <li>\u0421\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f TCP-\u0441\u0435\u0440\u0432\u0435\u0440 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket.</li> <li>\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0430\u0434\u0440\u0435\u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (server_address), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0445\u043e\u0441\u0442 (localhost) \u0438 \u043f\u043e\u0440\u0442 12345.</li> <li>TCP-\u0441\u043e\u043a\u0435\u0442 \u043f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043a \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u0430\u0434\u0440\u0435\u0441\u0443 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e server_socket.bind(server_address).</li> <li>server_socket.listen(1) \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440 \u0432 \u0440\u0435\u0436\u0438\u043c \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0441 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u043e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439, \u0440\u0430\u0432\u043d\u044b\u043c 1.</li> <li>\u0417\u0430\u0442\u0435\u043c \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0439 \u0446\u0438\u043a\u043b (while True) \u0438 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e server_socket.accept(). \u041a\u0430\u043a \u0442\u043e\u043b\u044c\u043a\u043e \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f, \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u043d\u043e\u0432\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 (client_connection) \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u0430\u0434\u0440\u0435\u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 (client_address).</li> <li>\u0414\u0430\u043b\u0435\u0435 \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e client_connection.recv(1024).decode(), \u0433\u0434\u0435 1024 - \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0434\u0430\u043d\u043d\u044b\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0437\u0430 \u043e\u0434\u0438\u043d \u0440\u0430\u0437.</li> <li>\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0440\u0430\u0437\u0431\u0438\u0440\u0430\u044e\u0442\u0441\u044f \u043d\u0430 \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 (\u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u043a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430, \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u0437\u0430\u043f\u044f\u0442\u043e\u0439), \u0438 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u044d\u0442\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442\u0441\u044f \u0433\u0438\u043f\u043e\u0442\u0435\u043d\u0443\u0437\u0430 \u043f\u043e \u0442\u0435\u043e\u0440\u0435\u043c\u0435 \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430.</li> <li>\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e client_connection.send(response.encode()).</li> <li>\u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e client_connection.close().</li> </ul> <pre><code># client.py\nimport socket\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c TCP-\u043a\u043b\u0438\u0435\u043d\u0442\u0430\nclient_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nserver_address = ('localhost', 12345)\n\ntry:\n    # \u0412\u0432\u043e\u0434\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b\n     a = float(input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u043b\u0438\u043d\u0443 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043a\u0430\u0442\u0435\u0442\u0430: \"))\n     b = float(input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u043b\u0438\u043d\u0443 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043a\u0430\u0442\u0435\u0442\u0430: \"))\n\n     # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0443\n     message = f\"{a},{b}\"\n     client_socket.connect(server_address)\n     client_socket.send(message.encode())\n\n     # \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u043c \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\n     data = client_socket.recv(1024).decode()\n     print(f\"\u041e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: {data}\")\nexcept ValueError:\n    print(\"\u041e\u0448\u0438\u0431\u043a\u0430: \u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0434\u043b\u0438\u043d \u043a\u0430\u0442\u0435\u0442\u043e\u0432.\")\nfinally:\n    client_socket.close()\n</code></pre> <ul> <li>\u0421\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f TCP-\u043a\u043b\u0438\u0435\u043d\u0442 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket.</li> <li>\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0430\u0434\u0440\u0435\u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (server_address), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0445\u043e\u0441\u0442 (localhost) \u0438 \u043f\u043e\u0440\u0442 12345.</li> <li>\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u0435\u0442\u0441\u044f \u0432\u0432\u0435\u0441\u0442\u0438 \u0434\u043b\u0438\u043d\u0443 \u0434\u0432\u0443\u0445 \u043a\u0430\u0442\u0435\u0442\u043e\u0432 \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b.</li> <li>\u0412\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a\u0438, \u0433\u0434\u0435 \u0434\u0432\u0435 \u0434\u043b\u0438\u043d\u044b \u043a\u0430\u0442\u0435\u0442\u043e\u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u044b \u0437\u0430\u043f\u044f\u0442\u043e\u0439.</li> <li>\u0417\u0430\u0442\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442\u0430 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e client_socket.recv(1024).decode() \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d.</li> </ul>"},{"location":"Lab1/#3","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443. \u0412 \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 http-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html. \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket.</p> <p>\u041a\u043e\u0434:</p> <pre><code># server.py\nimport socket\n\n# \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 HTML-\u0444\u0430\u0439\u043b\u0430\nwith open(\"index.html\", \"r\") as file:\n    html_content = file.read()\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c HTTP-\u0441\u0435\u0440\u0432\u0435\u0440\nserver_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nserver_address = ('localhost', 8080)\nserver_socket.bind(server_address)\n\nserver_socket.listen(1)\nprint(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d. \u041e\u0436\u0438\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430...\")\n\nwhile True:\n    client_connection, client_address = server_socket.accept()\n    print(f\"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 {client_address}\")\n\n    http_response = f\"HTTP/1.1 200 OK\\r\\nContent-Length: {len(html_content)}\\r\\n\\r\\n{html_content}\"\n    client_connection.sendall(http_response.encode())\n    client_connection.close()\n</code></pre> <ul> <li>\u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043e\u043d \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 HTML-\u0444\u0430\u0439\u043b\u0430 index.html \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e html_content. \u042d\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442\u0441\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u044f \u0444\u0430\u0439\u043b\u0430 \u0438 \u0447\u0442\u0435\u043d\u0438\u044f \u0435\u0433\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043e.</li> <li>\u0417\u0430\u0442\u0435\u043c \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f TCP-\u0441\u0435\u0440\u0432\u0435\u0440 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket.</li> <li>\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0430\u0434\u0440\u0435\u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (server_address), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0445\u043e\u0441\u0442 (localhost) \u0438 \u043f\u043e\u0440\u0442 8080.</li> <li>TCP-\u0441\u043e\u043a\u0435\u0442 \u043f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043a \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u0430\u0434\u0440\u0435\u0441\u0443 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e server_socket.bind(server_address).</li> <li>server_socket.listen(1) \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440 \u0432 \u0440\u0435\u0436\u0438\u043c \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0441 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u043e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439, \u0440\u0430\u0432\u043d\u044b\u043c 1.</li> <li>\u0417\u0430\u0442\u0435\u043c \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0439 \u0446\u0438\u043a\u043b (while True) \u0438 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e server_socket.accept(). \u041a\u0430\u043a \u0442\u043e\u043b\u044c\u043a\u043e \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f, \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u043d\u043e\u0432\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 (client_connection) \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u0430\u0434\u0440\u0435\u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 (client_address).</li> <li>\u0421\u0435\u0440\u0432\u0435\u0440 \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u0442 HTTP-\u043e\u0442\u0432\u0435\u0442, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0441\u0442\u0430\u0442\u0443\u0441 \"200 OK\" \u0438 \u0434\u043b\u0438\u043d\u0443 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043e HTML-\u0444\u0430\u0439\u043b\u0430, \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0435\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e client_connection.sendall(http_response.encode()).</li> <li>\u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e client_connection.close().</li> </ul> <pre><code># index.html\n&lt;!DOCTYPE html&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"UTF-8\"&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n        &lt;title&gt;My Love for Charles Leclerc&lt;/title&gt;\n        &lt;style&gt;\n            body {\n                font-family: Montserrat, sans-serif;\n                background-color: #f2f2f2;\n                text-align: center;\n                padding: 100px;\n            }\n            h1 {\n                color: red;\n            }\n            p {\n                color: red;\n            }\n        &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;I love Charles Leclerc&lt;/h1&gt;\n        &lt;p&gt;Scuderia Ferrari&lt;/p&gt;\n    &lt;/body&gt;\n    &lt;/html&gt;\n</code></pre> <p></p>"},{"location":"Lab1/#4","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0443\u0445\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0438\u043b\u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0447\u0430\u0441\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u043b\u043b\u043e\u0432. \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP \u2013 100% \u0431\u0430\u043b\u043b\u043e\u0432, \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e UDP \u2013 80%. \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 threading. \u0414\u043b\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e UDP, thearding \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0414\u043b\u044f \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0441 TCP \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0438 \u043f\u0440\u0438\u0435\u043c \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0432\u0441\u0435\u043c \u044e\u0437\u0435\u0440\u0430\u043c \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 \u0432 \u043f\u043e\u0442\u043e\u043a\u0430\u0445. \u041d\u0435 \u0437\u0430\u0431\u0443\u0434\u044c\u0442\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u044e\u0437\u0435\u0440\u043e\u0432, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u0442\u043e\u043c \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0438\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f.</p> <p>\u041a\u043e\u0434:</p> <pre><code># server.py\nimport socket\nimport threading\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c TCP-\u0441\u0435\u0440\u0432\u0435\u0440\nserver_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nserver_address = ('localhost', 12345)\nserver_socket.bind(server_address)\n\n# \u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0438 \u0438\u0445 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439\nclients = []\nclient_lock = threading.Lock()\n\ndef broadcast_message(message, sender):\n    with client_lock:\n        for client in clients:\n            if client != sender:\n                try:\n                    client.send(message.encode())\n                except:\n                    # \u0415\u0441\u043b\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043d\u0435 \u0443\u0434\u0430\u043b\u0430\u0441\u044c, \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430\n                    remove_client(client)\n\ndef remove_client(client):\n    with client_lock:\n        if client in clients:\n            clients.remove(client)\n\ndef client_handler(client_socket):\n    while True:\n        try:\n            message = client_socket.recv(1024).decode()\n            if not message:\n                break\n            broadcast_message(message, client_socket)\n        except:\n            pass  # \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a\n\n    # \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 \u0438 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435\n    remove_client(client_socket)\n    client_socket.close()\n\nserver_socket.listen(5)\nprint(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0447\u0430\u0442\u0430 \u0437\u0430\u043f\u0443\u0449\u0435\u043d. \u041e\u0436\u0438\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432...\")\n\nwhile True:\n    client_connection, client_address = server_socket.accept()\n    print(f\"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043e\u0442 {client_address}\")\n\n    with client_lock:\n        clients.append(client_connection)\n\n    # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u043e\u0442\u043e\u043a \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\n    client_thread = threading.Thread(target=client_handler, args=(client_connection,))\n    client_thread.start()\n</code></pre> <ul> <li>\u0421\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f TCP-\u0441\u0435\u0440\u0432\u0435\u0440 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket.</li> <li>\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0430\u0434\u0440\u0435\u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (server_address), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0445\u043e\u0441\u0442 (localhost) \u0438 \u043f\u043e\u0440\u0442 12345.</li> <li>TCP-\u0441\u043e\u043a\u0435\u0442 \u043f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043a \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u0430\u0434\u0440\u0435\u0441\u0443 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e server_socket.bind(server_address).</li> <li>\u0421\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u0441\u043f\u0438\u0441\u043e\u043a clients \u0434\u043b\u044f \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439.</li> <li>\u0421\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u043e\u0431\u044a\u0435\u043a\u0442 \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0438 (client_lock) \u0434\u043b\u044f \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0433\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0441\u043f\u0438\u0441\u043a\u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0438\u0437 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043f\u043e\u0442\u043e\u043a\u043e\u0432.</li> <li>\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f broadcast_message(message, sender), \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c, \u043a\u0440\u043e\u043c\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u044f.</li> <li>\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f remove_client(client), \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432.</li> <li>\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f client_handler(client_socket), \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0438\u0445 \u0434\u0440\u0443\u0433\u0438\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c.</li> <li>\u0421\u0435\u0440\u0432\u0435\u0440 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u0441\u043b\u0443\u0448\u0430\u0442\u044c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0441 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u043b\u0438\u043d\u043e\u0439 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f \u0440\u0430\u0432\u043d\u043e\u0439 5 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e server_socket.listen(5).</li> <li>\u0417\u0430\u0442\u0435\u043c \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0439 \u0446\u0438\u043a\u043b (while True) \u0438 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e server_socket.accept(). \u041a\u0430\u043a \u0442\u043e\u043b\u044c\u043a\u043e \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f, \u0435\u0433\u043e \u0441\u043e\u043a\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432 \u0441\u043f\u0438\u0441\u043e\u043a clients.</li> <li>\u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u043e\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u043e\u0442\u043e\u043a (client_thread) \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043e\u0442 \u043d\u0435\u0433\u043e.</li> </ul> <pre><code># client.py\nimport socket\nimport threading\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c TCP-\u043a\u043b\u0438\u0435\u043d\u0442\u0430\nclient_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nserver_address = ('localhost', 12345)\n\n# \u0412\u0432\u043e\u0434\u0438\u043c \u0438\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\nclient_name = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0432\u0430\u0448\u0435 \u0438\u043c\u044f: \")\n\nclient_socket.connect(server_address)\n\ndef receive_messages():\n    while True:\n        try:\n            message = client_socket.recv(1024).decode()\n                print(message)\n        except Exception as e:\n            print(f\"\u041e\u0448\u0438\u0431\u043a\u0430: {e}\")\n        break\n\nreceive_thread = threading.Thread(target=receive_messages)\nreceive_thread.start()\n\nwhile True:\n    message = input()\n        if message.lower() == \"exit\":\n            break\n\n        client_socket.send(f\"{client_name}: {message}\".encode())\n\n    client_socket.close()\n</code></pre> <ul> <li>\u0421\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f TCP-\u043a\u043b\u0438\u0435\u043d\u0442 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket.</li> <li>\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0430\u0434\u0440\u0435\u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (server_address), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0445\u043e\u0441\u0442 (localhost) \u0438 \u043f\u043e\u0440\u0442 12345.</li> <li>\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u0435\u0442\u0441\u044f \u0432\u0432\u0435\u0441\u0442\u0438 \u0438\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</li> <li>\u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e client_socket.connect(server_address).</li> <li>\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u043e\u0442\u043e\u043a (receive_thread), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043b\u0443\u0448\u0430\u0435\u0442 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0438\u0445 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d.</li> <li>\u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043f\u043e\u0442\u043e\u043a \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u0432\u0432\u043e\u0434\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041a\u043e\u0433\u0434\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u043e\u043d\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440.</li> </ul> <p> </p>"},{"location":"Lab1/#5","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5","text":"<p>\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 web-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST http \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Python \u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket. \u0417\u0430\u0434\u0430\u043d\u0438\u0435: \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u0435\u0442: - \u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435. - \u041e\u0442\u0434\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u0430\u0445 \u043f\u043e \u0434\u0441\u0438\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0432 \u0432\u0438\u0434\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b.</p> <p>\u041a\u043e\u0434:</p> <pre><code># server.py\nimport socket\nfrom email.parser import Parser\nfrom functools import lru_cache\nfrom urllib.parse import parse_qs, urlparse\nMAX_LINE = 64 * 1024\nMAX_HEADERS = 100\n\nclass MyHTTPServer:\n\n    def __init__(self, method, target, version, headers, rfile):\n        self.method = method\n        self.target = target\n        self.version = version\n        self.headers = headers\n        self.rfile = rfile\n\n    @property\n    def path(self):\n        return self.parsed_url.path\n\n    @property\n    def body(self):\n        size = self.headers.get('Content-Length')\n        if not size:\n            return None\n        content = self.rfile.read(int(size))\n        return content.decode('utf-8')\n\n    @property\n    @lru_cache(maxsize=None)\n    def parsed_url(self):\n        return urlparse(self.target)\n\n    @property\n    @lru_cache(maxsize=None)\n    def query_parameters(self):\n        return parse_qs(self.parsed_url.query)\n\n    @property\n    @lru_cache(maxsize=None)\n    def form_parameters(self):\n        return parse_qs(self.body)\n\n\nclass CustomResponse:\n    def __init__(self, status, reason, headers=None, body=None):\n        self.status = status\n        self.reason = reason\n        self.headers = headers\n        self.body = body\n\n\nclass HTTPServer:\n    def __init__(self, server_address):\n        self.server_address = server_address\n        self.connection = None\n        self.grades_data = {}  # {subject: [grades]}\n\n    def start(self):\n        server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        try:\n            server_socket.bind(self.server_address)\n            server_socket.listen(10)\n            print(\"Server is running...\")\n            while True:\n                client_socket, _ = server_socket.accept()\n                try:\n                    self.handle_client(client_socket)\n                except Exception as e:\n                    print('Connection failed', e)\n        finally:\n            server_socket.close()\n            print(\"Server stopped\")\n\n    def handle_client(self, conn):\n        try:\n            request = self.parse_request(conn)\n            response = self.handle_request(request)\n            self.send_response(conn, response)\n        except ConnectionResetError:\n            conn = None\n        except Exception as e:\n            print(\"Error\", e)\n        if conn:\n            conn.close()\n\n    def parse_request(self, conn):\n        rfile = conn.makefile('rb')\n        raw_request = rfile.readline(MAX_LINE + 1)\n        if len(raw_request) &gt; MAX_LINE:\n            raise Exception('Request line is too long')\n\n        request_line = str(raw_request, 'iso-8859-1')\n        request_line = request_line.rstrip('\\r\\n')\n        method, target, version = request_line.split()\n        if version != 'HTTP/1.1':\n            raise Exception('Unexpected HTTP version')\n\n        headers = self.parse_headers(rfile)\n        host = headers.get('Host')\n        if not host:\n            raise Exception('Bad request')\n\n        return MyHTTPServer(method, target, version, headers, rfile)\n\n    @staticmethod\n    def parse_headers(rfile):\n        headers = []\n        while True:\n            line = rfile.readline(MAX_LINE + 1)\n            if len(line) &gt; MAX_LINE:\n                raise Exception('Header line is too long')\n\n            if line in (b'\\r\\n', b'\\n', b''):\n                break\n\n            headers.append(line)\n            if len(headers) &gt; MAX_HEADERS:\n                raise Exception('Too many headers')\n\n        parsed_headers = b''.join(headers).decode('iso-8859-1')\n        return Parser().parsestr(parsed_headers)\n\n    def handle_request(self, request):\n        if request.path == '/' and request.method == 'POST':\n            return self.handle_post(request)\n        if request.method == 'GET':\n            if request.path == '/add_grade':\n                body = \"\"\"&lt;!DOCTYPE html&gt;\n                        &lt;html lang=\"ru\"&gt;\n                        &lt;style&gt;\n                            body {\n                                font-family: Montserrat, sans-serif;\n                                background-color: #e3ecfa;\n                                text-align: center;\n                                padding: 200px;\n                            }\n                            h2 {\n                                color: #8ab2f2;\n                            }\n                            p {\n                                color: #666;\n                                font-size: 20px;\n                            }\n                        &lt;/style&gt;\n                        &lt;head&gt;\n                            &lt;meta charset=\"UTF-8\"&gt;\n                            &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n                        &lt;/head&gt;\n                        &lt;script&gt;\n                            // JavaScript \u0441\u043a\u0440\u0438\u043f\u0442\u044b \u0437\u0434\u0435\u0441\u044c\n                        &lt;/script&gt;\n                        &lt;body&gt;\n                            &lt;h2&gt;ENTER THE GRADE&lt;/h2&gt;\n                            &lt;form method=\"POST\" action=\"/\"&gt;\n                                &lt;input type=\"text\" id=\"subject\" name=\"subject\" placeholder=\"Subject\"&gt;\n                                &lt;input type=\"text\" id=\"grade\" name=\"grade\" placeholder=\"Grade\"&gt;\n                                &lt;input type=\"submit\" value=\"Send\" style=\"background-color: #8ab2f2; color: #fff; padding: 10px 20px; border: none; cursor: pointer;border-radius: 20px;\"&gt;\n                            &lt;/form&gt;\n                            &lt;form action=\"/\"&gt;\n                                &lt;input type=\"submit\" value=\"To the main page\"/ style=\"background-color: #8ab2f2; color: #fff; padding: 10px 20px; border: none; cursor: pointer;border-radius: 20px;\"&gt;\n                            &lt;/form&gt;\n                        &lt;/body&gt;\n                        \"\"\"\n                return self.handle_get(body)\n            elif request.path == '/':\n                return self.handle_get()\n        content = \"\"\"&lt;!DOCTYPE html&gt;\n                &lt;html lang=\"ru\"&gt;\n                &lt;style&gt;\n                    body {\n                        font-family: Montserrat, sans-serif;\n                        background-color: #e3ecfa;\n                        text-align: center;\n                        padding: 200px;\n                    }\n                    h2 {\n                        color: #8ab2f2;\n                    }\n                    p {\n                        color: #666;\n                        font-size: 20px;\n                    }\n                &lt;/style&gt;\n                &lt;body&gt;\n                    &lt;h2&gt;Error 404&lt;/h2&gt;\n                    &lt;form action=\"/\"&gt;\n                        &lt;input type=\"submit\" value=\"To the main page\"/ style=\"background-color: #8ab2f2; color: #fff; padding: 10px 20px; border: none; cursor: pointer;border-radius: 20px;\"&gt;\n                    &lt;/form&gt;\n                &lt;/body&gt;\n                &lt;/html&gt;\n                \"\"\"\n        return self.handle_get(content)\n\n    def handle_get(self, body=None):\n        content_type = 'text/html; charset=utf-8'\n        if body is None:\n            body = \"\"\"\n                &lt;!DOCTYPE html&gt;\n                &lt;html lang=\"ru\"&gt;\n                &lt;style&gt;\n                    body {\n                        font-family: Montserrat, sans-serif;\n                        background-color: #e3ecfa;\n                        text-align: center;\n                        padding: 200px;\n                    }\n                    h2 {\n                        color: #8ab2f2;\n                    }\n                    p {\n                        color: #8ab2f2;\n                        font-size: 20px;\n                    }\n                &lt;/style&gt;\n                &lt;head&gt;\n                    &lt;meta charset=\"UTF-8\"&gt;\n                    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n                &lt;/head&gt;\n                &lt;body&gt;\n                    &lt;h2&gt;YOUR GRADES&lt;/h2&gt;\n                    &lt;table&gt;\n                        &lt;tr&gt;\n                            &lt;th&gt;Subject&lt;/th&gt;\n                            &lt;th&gt;Grade&lt;/th&gt;\n                        &lt;/tr&gt;\n                \"\"\"\n            for subject, grades in self.grades_data.items():\n                for grade in grades:\n                    body += f\"\"\"\n                            &lt;tr&gt;\n                                &lt;td&gt;{subject}&lt;/td&gt;\n                                &lt;td&gt;{grade}&lt;/td&gt;\n                            &lt;/tr&gt;\n                        \"\"\"\n\n            body += \"\"\"\n                    &lt;/table&gt;\n                    &lt;form action=\"/add_grade\"&gt;\n                        &lt;input type=\"submit\" value=\"Add grade\" style=\"background-color: #8ab2f2; color: #fff; padding: 10px 20px; border: none; cursor: pointer;border-radius: 20px;\"&gt;\n                    &lt;/form&gt;\n                &lt;/body&gt;\n                &lt;/html&gt;\n                \"\"\"\n\n        body = body.encode('utf-8')\n        headers = [('Content-Type', content_type),\n                ('Content-Length', len(body))]\n        return CustomResponse(200, 'OK', headers, body)\n\n    def handle_post(self, request):\n        subject = request.form_parameters['subject'][0]\n        grade = request.form_parameters['grade'][0]\n        try:\n            self.grades_data.setdefault(subject, []).append(grade)\n        except KeyError:\n            self.grades_data[subject] = [grade]\n        return self.handle_get()\n\n    @staticmethod\n    def send_response(conn, response):\n        wfile = conn.makefile('wb')\n        status_line = f'HTTP/1.1 {response.status} {response.reason}\\r\\n'\n        wfile.write(status_line.encode('iso-8859-1'))\n\n        if response.headers:\n            for (key, value) in response.headers:\n                header_line = f'{key}: {value}\\r\\n'\n                wfile.write(header_line.encode('iso-8859-1'))\n\n        wfile.write(b'\\r\\n')\n\n        if response.body:\n            wfile.write(response.body)\n\n        wfile.flush()\n        wfile.close()\n\n\nif __name__ == '__main__':\n    server_address = ('127.0.0.1', 8080)\n    http_server = HTTPServer(server_address)\n    http_server.start()\n</code></pre> <p></p>"},{"location":"Lab2/","title":"Lab2","text":""},{"location":"Lab2/#django","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django","text":"<p>\u0412\u0430\u0440\u0438\u0430\u043d\u0442: 4</p>"},{"location":"Lab2/#_1","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435","text":"<p>\u0421\u043f\u0438\u0441\u043e\u043a \u0442\u0443\u0440\u043e\u0432 \u0442\u0443\u0440\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0444\u0438\u0440\u043c\u044b</p> <p>\u0425\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0438 \u0442\u0443\u0440\u0430, \u0442\u0443\u0440\u0430\u0433\u0435\u043d\u0441\u0442\u0432\u0435, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u0442\u0443\u0440\u0430, \u043f\u0435\u0440\u0438\u043e\u0434\u0435 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0442\u0443\u0440\u0430, \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u043e\u043f\u043b\u0430\u0442\u044b. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b:</p> <ul> <li>\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.</li> <li>\u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u043e\u0432. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439.</li> <li>\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u0442\u0443\u0440\u0430\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u0434\u0430\u0442\u044b \u0442\u0443\u0440\u0430, \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f, \u0440\u0435\u0439\u0442\u0438\u043d\u0433 (1-10), \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440\u0435.</li> <li>\u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin.</li> <li>\u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u0432\u0441\u0435 \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0435 \u0442\u0443\u0440\u044b \u043f\u043e \u0441\u0442\u0440\u0430\u043d\u0430\u043c.</li> </ul>"},{"location":"Lab2/#models","title":"models","text":"<p>\u0412 \u0444\u0430\u0439\u043b\u0435 models.py \u0443 \u043d\u0430\u0441 4 \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u043b\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0433\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u0430. </p> <pre><code>from django.db import models\nfrom django.contrib.auth.models import User\n\nclass Tour(models.Model):\n    title = models.CharField(max_length=100)\n    agency = models.CharField(max_length=100)\n    description = models.TextField()\n    start_date = models.DateField()\n    end_date = models.DateField()\n    payment_conditions = models.TextField()\n    is_sold = models.BooleanField(default=False)\n</code></pre> <p>Tour \u2013 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0442\u0443\u0440\u0430\u0445: \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435, \u0430\u0433\u0435\u043d\u0441\u0442\u0432\u043e, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0443\u0441\u043b\u0443\u0433\u0443, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430, \u0434\u0430\u0442\u044b \u043d\u0430\u0447\u0430\u043b\u0430 \u0438 \u043a\u043e\u043d\u0446\u0430, \u0441\u043f\u043e\u0441\u043e\u0431 \u043e\u043f\u043b\u0430\u0442\u044b \u0438 \u0441\u0442\u0430\u0442\u0443\u0441 \"\u043f\u0440\u043e\u0434\u0430\u043d\u043e\" \u0438\u043b\u0438 \u043d\u0435\u0442;</p> <pre><code>class Reservation(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    tour = models.ForeignKey(Tour, on_delete=models.CASCADE)\n</code></pre> <p>Reservation \u2013 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435 \u0438 \u0435\u0433\u043e \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438;</p> <pre><code>class Review(models.Model):\n    tour = models.ForeignKey(Tour, on_delete=models.CASCADE)\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    text = models.TextField()\n    rating = models.PositiveIntegerField()\n    date = models.DateTimeField(auto_now_add=True)\n\n    def __str__(self):\n        return f\"Review for {self.tour.name} by {self.user.username}\"\n</code></pre> <p>Review \u2013 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u043e\u0442\u0437\u044b\u0432\u0430\u0445: \u0442\u0443\u0440, \u0438\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0435\u0433\u043e \u043e\u0446\u0435\u043d\u043a\u0430 \u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u0438 \u0434\u0430\u0442\u0430 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430;</p> <pre><code>class Country(models.Model):\n    name = models.CharField(max_length=100)\n\n    def __str__(self):\n        return self.name\n</code></pre> <p>Country \u2013 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0442\u0440\u0430\u043d\u0435 \u0442\u0443\u0440\u0430.</p>"},{"location":"Lab2/#forms","title":"forms","text":"<p>\u0424\u043e\u0440\u043c\u044b \u0434\u043b\u044f \u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u0438 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</p> <pre><code>from django import forms\nfrom .models import Review\nfrom .models import Reservation\n\nclass ReviewForm(forms.ModelForm):\n    class Meta:\n        model = Review\n        fields = ['text', 'rating']\n\nclass ReservationForm(forms.ModelForm):\n    class Meta:\n        model = Reservation\n        fields = ['user', 'tour']\n</code></pre> <p>html \u2013 \u043a\u043e\u0434 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044f \u0434\u043b\u044f \u0432\u0432\u043e\u0434\u0430 \u043e\u0442\u0437\u044b\u0432\u0430</p> <pre><code>{% extends \"base.html\" %}\n\n{% block content %}\n    &lt;div class=\"container\"&gt;\n    &lt;h2&gt;Write a Review for {{ tour.name }}&lt;/h2&gt;\n    &lt;form method=\"post\"&gt;\n        {% csrf_token %}\n        {{ form.as_p }}\n        &lt;button type=\"submit\"&gt;Submit Review&lt;/button&gt;\n    &lt;/form&gt;\n    &lt;/div&gt;\n{% endblock %}\n</code></pre> <p>html \u2013 \u043a\u043e\u0434 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044f \u0434\u043b\u044f \u0431\u0440\u043e\u043d\u0438</p> <pre><code>{% extends \"base.html\" %}\n\n{% block content %}\n&lt;h2&gt;Reserve Tour - {{ tour.name }}&lt;/h2&gt;\n&lt;form method=\"post\"&gt;\n    {% csrf_token %}\n    {{ form.as_p }}\n    &lt;button type=\"submit\"&gt;Reserve&lt;/button&gt;\n&lt;/form&gt;\n&lt;a href=\"{% url 'tour_list' %}\"&gt;Back to Tour List&lt;/a&gt;\n{% endblock %}\n</code></pre>"},{"location":"Lab2/#views","title":"views","text":"<pre><code>from .forms import ReviewForm\nfrom django.contrib.auth.forms import UserCreationForm\nfrom django.contrib.auth import login\nfrom django.db.models import Count\nfrom .models import Country, Tour\nfrom django.shortcuts import render, redirect,  get_object_or_404\nfrom .models import Reservation\nfrom .forms import ReservationForm\n\ndef tour_list(request):\n    tours = Tour.objects.all()\n    return render(request, '/Users/marinakuzmina/Documents/weblab2/tour_project/templates/tour_list.html', {'tours': tours})\n\ndef tour_detail(request, tour_id):\n    tour = Tour.objects.get(pk=tour_id)\n    return render(request, '/Users/marinakuzmina/Documents/weblab2/tour_project/templates/tour_detail.html', {'tour': tour})\n\ndef reserve_tour(request, tour_id):\n    if request.user.is_authenticated:\n        tour = Tour.objects.get(pk=tour_id)\n        reservation = Reservation(user=request.user, tour=tour)\n        reservation.save()\n        return redirect('user_profile')\n    else:\n        return redirect('login')\n\n\ndef write_review(request, tour_id):\n    tour = Tour.objects.get(pk=tour_id)\n\n    if request.method == 'POST':\n        form = ReviewForm(request.POST)\n        if form.is_valid():\n            review = form.save(commit=False)\n            review.tour = tour\n            review.user = request.user\n            review.save()\n            return redirect('tour_detail', tour_id=tour_id)\n    else:\n        form = ReviewForm()\n\n    return render(request, '/Users/marinakuzmina/Documents/weblab2/tour_project/templates/write_review.html', {'form': form, 'tour': tour})\n\n\ndef register(request):\n    if request.method == 'POST':\n        form = UserCreationForm(request.POST)\n        if form.is_valid():\n            user = form.save()\n            login(request, user)\n            return redirect('tour_list')  # \u041f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u0430 \u0433\u043b\u0430\u0432\u043d\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043f\u043e\u0441\u043b\u0435 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438\n    else:\n        form = UserCreationForm()\n    return render(request, '/Users/marinakuzmina/Documents/weblab2/tour_project/templates/registration/registration.html', {'form': form})\n\ndef sold_tours_by_country(request):\n    sold_tours = Tour.objects.filter(is_sold=True)\n    return render(request, 'sold_tours_by_country.html', {'sold_tours': sold_tours})\n\n\ndef user_profile(request):\n    if request.user.is_authenticated:\n        user_reservations = Reservation.objects.filter(user=request.user)\n\n        return render(request, 'user_profile.html', {'user_reservations': user_reservations})\n    else:\n        return redirect('login')\n\ndef update_reservation(request, reservation_id):\n    try:\n        reservation = Reservation.objects.get(pk=reservation_id)\n    except Reservation.DoesNotExist:\n        return redirect('error_page')  # \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043d\u0435\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439 \u0440\u0435\u0437\u0435\u0440\u0432\u0430\u0446\u0438\u0438\n\n    if request.method == 'POST':\n        form = ReservationForm(request.POST, instance=reservation)  # \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f\n        if form.is_valid():\n            form.save()  # \u0421\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u0443\u044e \u0440\u0435\u0437\u0435\u0440\u0432\u0430\u0446\u0438\u044e\n            return redirect('user_profile')  # \u041f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043f\u0440\u043e\u0444\u0438\u043b\u044f \u0438\u043b\u0438 \u0434\u0440\u0443\u0433\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443\n    else:\n        form = ReservationForm(instance=reservation)  # \u041f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0444\u043e\u0440\u043c\u0435\n\n    return render(request, 'update_reservation.html', {'form': form, 'reservation': reservation})\n\ndef delete_reservation(request, reservation_id):\n    reservation = get_object_or_404(Reservation, pk=reservation_id, user=request.user)\n\n    if request.method == 'POST':\n        reservation.delete()\n        return redirect('user_profile')\n\n    return render(request, 'delete_reservation.html', {'reservation': reservation})\n</code></pre>"},{"location":"Lab2/#urls","title":"urls","text":"<pre><code>from django.urls import path\nfrom tour_project import views\n\nurlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path('', views.tour_list, name='tour_list'),\n    path('tour/&lt;int:tour_id&gt;/', views.tour_detail, name='tour_detail'),\n    path('tour/&lt;int:tour_id&gt;/reserve/', views.reserve_tour, name='reserve_tour'),\n    path('tour/&lt;int:tour_id&gt;/write_review/', views.write_review, name='write_review'),\n    path('login/', auth_views.LoginView.as_view(), name='login'),\n    path('register/', views.register, name='register'),\n    path('profile/', views.user_profile, name='user_profile'),\n    # URL-\u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0440\u0435\u0437\u0435\u0440\u0432\u0430\u0446\u0438\u0439\n    path('reservation/update/&lt;int:reservation_id&gt;/', views.update_reservation, name='update_reservation'),\n    path('reservation/delete/&lt;int:reservation_id&gt;/', views.delete_reservation, name='delete_reservation'),\n    path('sold_tours_by_country/', views.sold_tours_by_country, name='sold_tours_by_country'),\n]\n</code></pre>"},{"location":"Lab2/#_2","title":"\u0412\u044b\u0432\u043e\u0434\u044b","text":"<p>\u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0432\u0442\u043e\u0440\u043e\u0439 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \"\u0420\u0415\u0410\u041b\u0418\u0417\u0410\u0426\u0418\u042f \u041f\u0420\u041e\u0421\u0422\u041e\u0413\u041e \u0421\u0410\u0419\u0422\u0410 \u0421\u0420\u0415\u0414\u0421\u0422\u0412\u0410\u041c\u0418 DJANGO\" \u0431\u044b\u043b\u043e \u0438\u0437\u0443\u0447\u0435\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 django: \u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445, \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439 \u0438 \u043e\u0441\u043d\u043e\u0432\u044b html \u2013 \u0432\u0435\u0440\u0441\u0442\u043a\u0438. </p>"},{"location":"Lab3/","title":"Lab3","text":""},{"location":"Lab3/#django-django-rest-framework","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0441\u0442\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django \u0418 Django REST Framework","text":"<p>\u041a\u0430\u0442\u0430\u043b\u043e\u0433 \u043a\u043d\u0438\u0433:</p> <ul> <li>\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u043c\u043e\u0433\u0443\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u043a\u043d\u0438\u0433\u0438 \u0432 \u043e\u0431\u0449\u0438\u0439 \u043a\u0430\u0442\u0430\u043b\u043e\u0433, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0438, \u0430\u0432\u0442\u043e\u0440\u0435, \u043e\u0431\u043b\u043e\u0436\u043a\u0435 \u0438 \u043a\u0440\u0430\u0442\u043a\u043e\u043c \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0438.</li> <li>\u041f\u043e\u0438\u0441\u043a \u0438 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u043a\u043d\u0438\u0433 \u043f\u043e \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u043c \u043a\u0440\u0438\u0442\u0435\u0440\u0438\u044f\u043c.</li> </ul> <p>\u041f\u0440\u043e\u0444\u0438\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439:</p> <ul> <li>\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u0441\u043e\u0437\u0434\u0430\u044e\u0442 \u0441\u0432\u043e\u0438 \u043f\u0440\u043e\u0444\u0438\u043b\u0438, \u0433\u0434\u0435 \u043c\u043e\u0433\u0443\u0442 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0441\u0432\u043e\u0438 \u043b\u044e\u0431\u0438\u043c\u044b\u0435 \u0436\u0430\u043d\u0440\u044b, \u0430\u0432\u0442\u043e\u0440\u043e\u0432 \u0438 \u0442.\u0434.</li> <li>\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0434\u0440\u0443\u0437\u0435\u0439 \u0438 \u0441\u043b\u0435\u0434\u0438\u0442\u044c \u0437\u0430 \u0438\u0445 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c\u044e.</li> </ul> <p>\u041e\u0431\u0437\u043e\u0440\u044b \u0438 \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u0438:</p> <ul> <li>\u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u043e\u0431\u0437\u043e\u0440\u044b \u0438 \u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0440\u0435\u0439\u0442\u0438\u043d\u0433\u0438 \u043a\u043d\u0438\u0433\u0430\u043c.</li> <li>\u0422\u043e\u043f-\u043b\u0438\u0441\u0442\u044b \u043a\u043d\u0438\u0433 \u043f\u043e \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u043c \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f\u043c.</li> </ul> <p>\u041a\u043d\u0438\u0436\u043d\u044b\u0435 \u043a\u043b\u0443\u0431\u044b:</p> <ul> <li>\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0432\u0438\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u044b\u0445 \u043a\u043b\u0443\u0431\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0441\u0443\u0436\u0434\u0435\u043d\u0438\u044f \u043a\u043d\u0438\u0433 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0436\u0430\u043d\u0440\u0430, \u0430\u0432\u0442\u043e\u0440\u0430 \u0438\u043b\u0438 \u0442\u0435\u043c\u044b.</li> <li>\u041f\u043e\u0441\u0442\u044b, \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u0438 \u043e\u0431\u0441\u0443\u0436\u0434\u0435\u043d\u0438\u044f \u0432\u043d\u0443\u0442\u0440\u0438 \u043a\u043b\u0443\u0431\u043e\u0432.</li> </ul> <p>\u041f\u0435\u0440\u0441\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0435 \u0441\u043f\u0438\u0441\u043a\u0438:</p> <ul> <li>\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u043e\u0432 \"\u041f\u0440\u043e\u0447\u0438\u0442\u0430\u043d\u043e\", \"\u0425\u043e\u0447\u0443 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c\", \"\u0427\u0438\u0442\u0430\u044e \u0441\u0435\u0439\u0447\u0430\u0441\" \u0438 \u0442.\u0434.</li> </ul>"},{"location":"Lab3/#rad","title":"Rad","text":"<p>\u2013 \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0430, \u0433\u0434\u0435 \u043b\u044e\u0431\u0438\u0442\u0435\u043b\u0438 \u0447\u0442\u0435\u043d\u0438\u044f \u043c\u043e\u0433\u0443\u0442 \u043e\u0431\u043c\u0435\u043d\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u044f\u043c\u0438, \u043e\u0431\u0441\u0443\u0436\u0434\u0430\u0442\u044c \u043a\u043d\u0438\u0433\u0438, \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0441\u043f\u0438\u0441\u043a\u0438 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d\u043d\u044b\u0445 \u0438 \u043f\u043b\u0430\u043d\u0438\u0440\u0443\u0435\u043c\u044b\u0445 \u043a\u043d\u0438\u0433, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c \u043b\u044e\u0434\u0435\u0439 \u0441 \u043f\u043e\u0445\u043e\u0436\u0438\u043c\u0438 \u043b\u0438\u0442\u0435\u0440\u0430\u0442\u0443\u0440\u043d\u044b\u043c\u0438 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0430\u043c\u0438.</p>"},{"location":"Lab3/#_1","title":"\u0421\u0445\u0435\u043c\u0430 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445","text":"<p>Book (\u041a\u043d\u0438\u0433\u0430):</p> <ul> <li>title: \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043d\u0438\u0433\u0438 (CharField).</li> <li>author: \u0410\u0432\u0442\u043e\u0440 \u043a\u043d\u0438\u0433\u0438 (CharField).</li> <li>cover: \u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043e\u0431\u043b\u043e\u0436\u043a\u0438 \u043a\u043d\u0438\u0433\u0438 (ImageField).</li> <li>description: \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043a\u043d\u0438\u0433\u0438 (TextField).</li> </ul> <p>UserProfile (\u041f\u0440\u043e\u0444\u0438\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f):</p> <ul> <li>user: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f Django (OneToOneField).</li> <li>favorite_genres: \u041b\u044e\u0431\u0438\u043c\u044b\u0435 \u0436\u0430\u043d\u0440\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f (CharField).</li> </ul> <p>Review (\u041e\u0431\u0437\u043e\u0440):</p> <ul> <li>user: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f Django (ForeignKey).</li> <li>book: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e \u043a\u043d\u0438\u0433\u0438 (ForeignKey).</li> <li>rating: \u0420\u0435\u0439\u0442\u0438\u043d\u0433 \u043e\u0431\u0437\u043e\u0440\u0430 (PositiveIntegerField).</li> <li>text: \u0422\u0435\u043a\u0441\u0442 \u043e\u0431\u0437\u043e\u0440\u0430 (TextField).</li> </ul> <p>BookList (\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043d\u0438\u0433):</p> <ul> <li>user: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f Django (ForeignKey).</li> <li>book: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e \u043a\u043d\u0438\u0433\u0438 (ForeignKey).</li> <li>list_type: \u0422\u0438\u043f \u0441\u043f\u0438\u0441\u043a\u0430 (CharField), \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \"\u041f\u0440\u043e\u0447\u0438\u0442\u0430\u043d\u043e\", \"\u0425\u043e\u0447\u0443 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c\", \"\u0427\u0438\u0442\u0430\u044e \u0441\u0435\u0439\u0447\u0430\u0441\" \u0438 \u0442.\u0434.</li> </ul> <p>BookClub (\u041a\u043d\u0438\u0436\u043d\u044b\u0439 \u043a\u043b\u0443\u0431):</p> <ul> <li>name: \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043d\u0438\u0436\u043d\u043e\u0433\u043e \u043a\u043b\u0443\u0431\u0430 (CharField).</li> <li>description: \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043a\u043d\u0438\u0436\u043d\u043e\u0433\u043e \u043a\u043b\u0443\u0431\u0430 (TextField).</li> </ul> <p>ClubMembership (\u0427\u043b\u0435\u043d\u0441\u0442\u0432\u043e \u0432 \u043a\u043b\u0443\u0431\u0435):</p> <ul> <li>user: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f Django (ForeignKey).</li> <li>club: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e \u043a\u043d\u0438\u0436\u043d\u043e\u0433\u043e \u043a\u043b\u0443\u0431\u0430 (ForeignKey).</li> </ul> <p>ClubPost (\u041f\u043e\u0441\u0442 \u0432 \u043a\u043b\u0443\u0431\u0435):</p> <ul> <li>user: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f Django (ForeignKey).</li> <li>club: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e \u043a\u043d\u0438\u0436\u043d\u043e\u0433\u043e \u043a\u043b\u0443\u0431\u0430 (ForeignKey).</li> <li>text: \u0422\u0435\u043a\u0441\u0442 \u043f\u043e\u0441\u0442\u0430 \u0432 \u043a\u043b\u0443\u0431\u0435 (TextField).</li> </ul> <p>Comment (\u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439):</p> <ul> <li>user: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f Django (ForeignKey).</li> <li>post: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e \u043f\u043e\u0441\u0442\u0430 \u0432 \u043a\u043b\u0443\u0431\u0435 (ForeignKey).</li> <li>text: \u0422\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f (TextField).</li> </ul> <pre><code>from django.db import models\nfrom django.contrib.auth.models import User\n\nclass Book(models.Model):\n    title = models.CharField(max_length=255)\n    author = models.CharField(max_length=255)\n    cover = models.ImageField(upload_to='book_covers/')\n    description = models.TextField()\n\nclass UserProfile(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    favorite_genres = models.CharField(max_length=255)\n\nclass Review(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    book = models.ForeignKey(Book, on_delete=models.CASCADE)\n    rating = models.PositiveIntegerField()\n    text = models.TextField()\n\nclass BookList(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    book = models.ForeignKey(Book, on_delete=models.CASCADE)\n    list_type = models.CharField(max_length=255)  # \u041f\u0440\u043e\u0447\u0438\u0442\u0430\u043d\u043e, \u0425\u043e\u0447\u0443 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c, \u0427\u0438\u0442\u0430\u044e \u0441\u0435\u0439\u0447\u0430\u0441 \u0438 \u0442.\u0434.\n\nclass BookClub(models.Model):\n    name = models.CharField(max_length=255)\n    description = models.TextField()\n\nclass ClubMembership(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    club = models.ForeignKey(BookClub, on_delete=models.CASCADE)\n\nclass ClubPost(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    club = models.ForeignKey(BookClub, on_delete=models.CASCADE)\n    text = models.TextField()\n\nclass Comment(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    post = models.ForeignKey(ClubPost, on_delete=models.CASCADE)\n    text = models.TextField()\n</code></pre>"},{"location":"Lab3/#serializers","title":"serializers","text":"<pre><code>from rest_framework import serializers\nfrom .models import Book, UserProfile, Review, BookList, BookClub, ClubMembership, ClubPost, Comment\n\nclass BookSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Book\n        fields = '__all__'\n\nclass UserProfileSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = UserProfile\n        fields = '__all__'\n\nclass ReviewSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Review\n        fields = '__all__'\n\nclass BookListSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = BookList\n        fields = '__all__'\n\nclass BookClubSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = BookClub\n        fields = '__all__'\n\nclass ClubMembershipSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ClubMembership\n        fields = '__all__'\n\nclass ClubPostSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ClubPost\n        fields = '__all__'\n\nclass CommentSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Comment\n        fields = '__all__'\n</code></pre>"},{"location":"Lab3/#views","title":"views","text":"<pre><code>from rest_framework import viewsets\nfrom .models import Book, UserProfile, Review, BookList, BookClub, ClubMembership, ClubPost, Comment\nfrom .serializers import BookSerializer, UserProfileSerializer, ReviewSerializer, BookListSerializer, \\\n    BookClubSerializer, ClubMembershipSerializer, ClubPostSerializer, CommentSerializer\n\nclass BookViewSet(viewsets.ModelViewSet):\n    queryset = Book.objects.all()\n    serializer_class = BookSerializer\n\nclass UserProfileViewSet(viewsets.ModelViewSet):\n    queryset = UserProfile.objects.all()\n    serializer_class = UserProfileSerializer\n\nclass ReviewViewSet(viewsets.ModelViewSet):\n    queryset = Review.objects.all()\n    serializer_class = ReviewSerializer\n\nclass BookListViewSet(viewsets.ModelViewSet):\n    queryset = BookList.objects.all()\n    serializer_class = BookListSerializer\n\nclass BookClubViewSet(viewsets.ModelViewSet):\n    queryset = BookClub.objects.all()\n    serializer_class = BookClubSerializer\n\nclass ClubMembershipViewSet(viewsets.ModelViewSet):\n    queryset = ClubMembership.objects.all()\n    serializer_class = ClubMembershipSerializer\n\nclass ClubPostViewSet(viewsets.ModelViewSet):\n    queryset = ClubPost.objects.all()\n    serializer_class = ClubPostSerializer\n\nclass CommentViewSet(viewsets.ModelViewSet):\n    queryset = Comment.objects.all()\n    serializer_class = CommentSerializer\n</code></pre>"},{"location":"Lab3/#urls","title":"urls","text":"<pre><code>from django.urls import path, include\nfrom django.contrib import admin\nfrom rest_framework.routers import DefaultRouter\nfrom Rad_app.views import BookViewSet, UserProfileViewSet, ReviewViewSet, BookListViewSet, \\\n    BookClubViewSet, ClubMembershipViewSet, ClubPostViewSet, CommentViewSet\n\nrouter = DefaultRouter()\nrouter.register(r'books', BookViewSet)\nrouter.register(r'userprofiles', UserProfileViewSet)\nrouter.register(r'reviews', ReviewViewSet)\nrouter.register(r'booklists', BookListViewSet)\nrouter.register(r'bookclubs', BookClubViewSet)\nrouter.register(r'clubmemberships', ClubMembershipViewSet)\nrouter.register(r'clubposts', ClubPostViewSet)\nrouter.register(r'comments', CommentViewSet)\n\nurlpatterns = [\n    path(\"admin/\", admin.site.urls),\n]\n</code></pre>"},{"location":"Lab4/","title":"Lab4","text":""},{"location":"Lab4/#vuejs","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Vue.js","text":""},{"location":"Lab4/#rad","title":"Rad","text":"<p>\u2013 \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0430, \u0433\u0434\u0435 \u043b\u044e\u0431\u0438\u0442\u0435\u043b\u0438 \u0447\u0442\u0435\u043d\u0438\u044f \u043c\u043e\u0433\u0443\u0442 \u043e\u0431\u043c\u0435\u043d\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u044f\u043c\u0438, \u043e\u0431\u0441\u0443\u0436\u0434\u0430\u0442\u044c \u043a\u043d\u0438\u0433\u0438, \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0441\u043f\u0438\u0441\u043a\u0438 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d\u043d\u044b\u0445 \u0438 \u043f\u043b\u0430\u043d\u0438\u0440\u0443\u0435\u043c\u044b\u0445 \u043a\u043d\u0438\u0433, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c \u043b\u044e\u0434\u0435\u0439 \u0441 \u043f\u043e\u0445\u043e\u0436\u0438\u043c\u0438 \u043b\u0438\u0442\u0435\u0440\u0430\u0442\u0443\u0440\u043d\u044b\u043c\u0438 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0430\u043c\u0438.</p>"},{"location":"Lab4/#_1","title":"\u0418\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b","text":"<p> \u041e\u0441\u043d\u043e\u0432\u043d\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441\u0435\u0440\u0432\u0438\u0441\u0430</p> <p></p> <p>\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438</p> <p></p> <p>\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043b\u043e\u0433\u0438\u043d\u0430</p> <p></p> <p>\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u0440\u043e\u0444\u0438\u043b\u044f</p> <p></p> <p>\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043a\u043d\u0438\u0433\u0438</p>"},{"location":"Practice3/","title":"Practice3","text":""},{"location":"Practice3/#31","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430 3.1","text":"<p>\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 6-7 \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0438 5-6 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0443 \u043d\u0430\u0437\u043d\u0430\u0447\u044c\u0442\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442 1 \u0434\u043e 3 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439. \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043b\u0438\u0431\u043e \u0432 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440\u0430, \u043b\u0438\u0431\u043e \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c python-\u0444\u0430\u0439\u043b\u0435. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u0442\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432. </p> <p>\u0421\u043a\u0440\u0438\u043f\u0442 create_data.py, \u0440\u0430\u0437\u043c\u0435\u0449\u0430\u0435\u043c \u0435\u0433\u043e \u0440\u044f\u0434\u043e\u043c \u0441 manage.py:</p> <pre><code>from django.utils import timezone\nfrom project_first_app.models import Driver, DriverLicence, Car, Ownership\n\ndrivers_data = [\n    {\"username\": \"driver111\", \"last_name\": \"Russell\", \"first_name\": \"George\", \"date_of_birth\": timezone.now()},\n    {\"username\": \"driver222\", \"last_name\": \"Rodr\u00edguez\", \"first_name\": \"Ricardo\", \"date_of_birth\": timezone.now()},\n    {\"username\": \"driver333\", \"last_name\": \"Sainz\", \"first_name\": \"Carlos\", \"date_of_birth\": timezone.now()},\n    {\"username\": \"driver444\", \"last_name\": \"Hamilton\", \"first_name\": \"Lewis\", \"date_of_birth\": timezone.now()},\n    {\"username\": \"driver555\", \"last_name\": \"Marko\", \"first_name\": \"Helmut\", \"date_of_birth\": timezone.now()},\n    {\"username\": \"driver666\", \"last_name\": \"Leclerc\", \"first_name\": \"Charles\", \"date_of_birth\": timezone.now()},\n]\n\ncreated_drivers = []\n\nfor data in drivers_data:\n    driver = Driver.objects.create_user(**data)\n    created_drivers.append(driver)\n    print(f\"\u0421\u043e\u0437\u0434\u0430\u043d \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c: {driver.username}\")\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438\ncars_data = [\n    {\"number\": \"YCE518\", \"brand\": \"BMW\", \"car_model\": \"7 Series\", \"color\": \"Black\"},\n    {\"number\": \"UGH672\", \"brand\": \"Janguar\", \"car_model\": \"XJ\", \"color\": \"Blue\"},\n    {\"number\": \"BCR629\", \"brand\": \"Skoda\", \"car_model\": \"Felicia\", \"color\": \"Pink\"},\n    {\"number\": \"MNB576\", \"brand\": \"Alfa Romeo\", \"car_model\": \"Giulia\", \"color\": \"Black\"},\n    {\"number\": \"NLI910\", \"brand\": \"Audi\", \"car_model\": \"R8\", \"color\": \"Yellow\"},\n]\n\ncreated_cars = []\n\nfor data in cars_data:\n    car = Car.objects.create(**data)\n    created_cars.append(car)\n    print(f\"\u0421\u043e\u0437\u0434\u0430\u043d \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c: {car.number}\")\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f\nlicences_data = [\n    {\"owner\": driver, \"number\": str(i + 1), \"licence_type\": chr(ord(\"A\") + i), \"date_of_release\": timezone.now()}\n    for i, driver in enumerate(created_drivers)\n]\n\nfor data in licences_data:\n    DriverLicence.objects.create(**data)\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u0435\nownership_data = [\n    {\"driver\": driver, \"car\": car, \"date_beginning\": timezone.now(), \"date_end\": timezone.now()}\n    for driver, car in zip(created_drivers, created_cars)\n]\n\nfor data in ownership_data:\n    Ownership.objects.create(**data)\n\nprint(\"\u0421\u043a\u0440\u0438\u043f\u0442 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d.\")\n</code></pre> <p>\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f:</p> <p>\u0422\u0430\u0431\u043b\u0438\u0446\u044b \u0434\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043f\u0442\u0430:  </p> <p>\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u0432 python3 manage.py shell: </p> <p>\u0422\u0430\u0431\u043b\u0438\u0446\u044b \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043f\u0442\u0430:  </p>"},{"location":"Practice3/#32","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430 3.2","text":"<p>\u041f\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u043c \u0432 \u043f\u0440.1 \u0434\u0430\u043d\u043d\u044b\u043c \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0430 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044e:</p> <p>\u0412\u044b\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \u201cBMW\u201d:</p> <pre><code>cars = Car.objects.filter(brand='BMW')\n</code></pre> <p></p> <p>\u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u201cCharles\u201d:</p> <pre><code>charles_drivers = Driver.objects.filter(user__first_name='Charles')\n</code></pre> <p></p> <p>\u0412\u0437\u044f\u0432 \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0435\u0433\u043e id, \u0438 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438:</p> <pre><code>import random\n\nrandom_owner = Driver.objects.all().order_by('?').first()\ndriver_licence = DriverLicence.objects.get(owner=random_owner)\n</code></pre> <p></p> <p>\u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d:</p> <pre><code> blue_car_owners = Ownership.objects.filter(car__color='Blue').values('driver__first_name', 'driver__last_name').distinct()\n</code></pre> <p></p> <p>\u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010:</p> <pre><code>owners_2010 = Ownership.objects.filter(date_beginning__year=2010).values('driver__first_name', 'driver__last_name').distinct()\n</code></pre> <p></p>"},{"location":"Practice3/#33","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u043a\u0430 3.3","text":"<p>\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b c \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435\u043c \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432:</p> <p>\u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f:</p> <pre><code>oldest_license_date = DriverLicence.objects.order_by('date_of_release').values('date_of_release').first()\n</code></pre> <p></p> <p>\u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u0435:</p> <pre><code>latest_ownership_date = Ownership.objects.exclude(date_end=None).order_by('-date_end').values('date_end').first()\n</code></pre> <p></p> <p>\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f:</p> <pre><code>from django.db.models import Count\ncars_per_driver = Ownership.objects.values('driver__first_name', 'driver__last_name').annotate(num_cars=Count('car'))\n</code></pre> <p></p> <p>\u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438:</p> <pre><code>cars_per_brand = Car.objects.values('brand').annotate(num_cars=Count('id'))\n</code></pre> <p></p> <p>\u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f:</p> <pre><code>sorted_drivers = Driver.objects.order_by('driverlicence__date_of_release').distinct()\n</code></pre> <p></p>"}]}